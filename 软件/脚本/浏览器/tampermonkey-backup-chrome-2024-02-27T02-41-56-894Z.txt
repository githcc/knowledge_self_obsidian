{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"üî•ÊåÅÁª≠Êõ¥Êñ∞üî• CSDNÂπøÂëäÂÆåÂÖ®ËøáÊª§„ÄÅ‰∫∫ÊÄßÂåñËÑöÊú¨‰ºòÂåñÔºöüÜï ‰∏çÁî®ÂÜçÁôªÂΩï‰∫ÜÔºÅËÆ©‰Ω†‰ΩìÈ™å‰ª§‰∫∫ÊÉäÂñúÁöÑÂ¥≠Êñ∞CSDN„ÄÇ","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["*://*.csdn.net/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["www.csdn.net"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1709000746713,"data":{}},"enabled":true,"position":1,"uuid":"c5e8159a-2235-4ce3-b836-4264a136791c","source":"","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1709000746711,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1709000746711,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1709000746711,"mimetype":"text/javascript"},"source":""}]},{"name":"ZhiHuLink","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["https://*.zhihu.com/*"],"merge_includes":true,"use_matches":[],"orig_matches":["https://*.zhihu.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1709000746714,"data":{}},"enabled":true,"position":2,"uuid":"e5eda5b1-6d2e-46f8-98bd-9b688023765c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBaaGlIdUxpbmsKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vQ2FjaXZ5L3V0aWxzL2Jsb2IvbWFzdGVyL0dyZWFzeUZvcmsvWmhpSHVMaW5rLmpzCi8vIEB2ZXJzaW9uICAgICAgMC44Ci8vIEBkZXNjcmlwdGlvbiAg55u05o6l6K6/6Zeu55+l5LmO5aSW6ZO+Ci8vIEBhdXRob3IgICAgICAgQ2FjaXZ5Ci8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly8qLnpoaWh1LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgaHR0cHM6Ly8qLnpoaWh1LmNvbS8qCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKJ3VzZSBzdHJpY3QnOwovLyBZb3VyIGNvZGUgaGVyZS4uLgp2YXIgbG9hZGluZyA9IGZhbHNlOwpyZWRpcmVjdCgpOwpzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKcmVkaXJlY3QoKTsKfSwgMzAwMCk7CgogICAgZnVuY3Rpb24gcmVkaXJlY3QoKSB7CiAgICAgICAgaWYgKCFsb2FkaW5nKSB7CiAgICAgICAgICAgIGxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICB2YXIgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJhW2hyZWYqPScvL2xpbmsuemhpaHUuY29tJ10iKTsKICAgICAgICAgICAgdmFyIGhyZWY7CiAgICAgICAgICAgIHZhciBsZW5ndGggPSBsaW5rcy5sZW5ndGg7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGhyZWYgPSBsaW5rc1tpXS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTsKICAgICAgICAgICAgICAgIGlmIChocmVmKSB7CiAgICAgICAgICAgICAgICAgICAgbGlua3NbaV0uc2V0QXR0cmlidXRlKCdocmVmJywgdW5lc2NhcGUoaHJlZi5zcGxpdCgndGFyZ2V0PScpWzFdKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgbG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0KICAgIH0KfSkoKTs="},{"name":"ÁΩëÁõòÁõ¥Èìæ‰∏ãËΩΩÂä©Êâã","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/disk/main*","*://yun.baidu.com/disk/main*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/*","*://yun.baidu.com/share/*","*://www.aliyundrive.com/s/*","*://www.aliyundrive.com/drive*","*://www.alipan.com/s/*","*://www.alipan.com/drive*","*://cloud.189.cn/web/*","*://pan.xunlei.com/*","*://pan.quark.cn/*","*://yun.139.com/*","*://caiyun.139.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":["baidu.com","baidupcs.com","aliyundrive.com","alipan.com","189.cn","xunlei.com","quark.cn","youxiaohou.com","yun.139.com","caiyun.139.com","localhost","*"],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1709000746722,"data":{"license":"sAGPL3","setting_init_code":"s865746","setting_rpc_dir":"sD:","setting_rpc_domain":"shttp://localhost","setting_rpc_path":"s/jsonrpc","setting_rpc_port":"s16800","setting_rpc_token":"s","setting_terminal_type":"swc","setting_theme_color":"s#09AAFF"}},"enabled":true,"position":3,"file_url":"https://update.greasyfork.org/scripts/436446/%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"50f42ca9-77e2-401c-b857-1c30c81b3475","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://registry.npmmirror.com/jquery/3.7.0/files/dist/jquery.min.js","ts":1709000746717,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert2.all.min.js","url":"https://registry.npmmirror.com/sweetalert2/10.16.6/files/dist/sweetalert2.all.min.js","ts":1709000746718,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"md5.min.js","url":"https://registry.npmmirror.com/js-md5/0.7.3/files/build/md5.min.js","ts":1709000746718,"mimetype":"text/javascript"},"source":""}]},{"name":"New Userscript","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["http://m.xsbiquge.la/book/36546/20118252/2.html"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"ts":1709000746714,"data":{}},"enabled":true,"position":4,"uuid":"3a0cc9dc-4ead-4cbc-b9c4-46a35e6e326b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBOZXcgVXNlcnNjcmlwdAovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDIwMjQtMDItMjQKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICBodHRwOi8vbS54c2JpcXVnZS5sYS9ib29rLzM2NTQ2LzIwMTE4MjUyLzIuaHRtbAovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/c3o9NjQmZG9tYWluPXhzYmlxdWdlLmxhCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIC8vIOS9v+eUqOato+WImeihqOi+vuW8j+abv+aNogogICAgdmFyIHJlZ2V4ID0gL+W/q+abtOaWsO+8geaXoOW5v+WRiu+8gS9nOwogICAgdmFyIHRleHQgPSBkb2N1bWVudC5ib2R5LnRleHRDb250ZW50LnJlcGxhY2UocmVnZXgsICcnKTsKfSkoKTs="}]}